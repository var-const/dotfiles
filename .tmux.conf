# If you run tmux attach and there is a session, then it will attach
# to that session (whether it's already attached or not).
# If there is not a session already then it will create one for you.
new-session -n $HOST

set-option -g prefix M-j

# So that mvim's clipboard works, see: http://stackoverflow.com/questions/16618992/cant-paste-into-macvim
# Has to be wrapped in a check, otherwise tmux would fail to start
# if reattach-to-user-namespace is not installed
if-shell "~/dotfiles/get_os.sh | grep -q darwin" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"

# Vi-like keybindings in scroll mode
set-window-option -g mode-keys vi
# Also emulate visual mode
bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# Copy to the system clipboard
bind -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
bind -t vi-copy 'Y' copy-pipe 'xclip -in -selection clipboard'

bind v split-window -h
bind - split-window -v

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
# The -r switch to bind allows half a second time (set via repeat-time) to perform the next keystroke without pressing the prefix again.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display 'tmux config reloaded'

set-option -g history-limit 10000

# After you press escape, tmux waits for a while in case the escape is following by
# another character forming an escape sequence (escape seems to be interchangeable
# with alt, like esc-j j works just like alt-j j). It leads to noticeable delay in,
# for example, vim - pressing escape to exit command mode has an annoying pause.
# Let's turn it off by telling tmux to wait for zero ms
set -s escape-time 0

# It's more natural for the first window to be 1, not 0, and also 0 is too far
# away
set -g base-index 1
set-window-option -g pane-base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
